import { CloudFormation } from '@aws-sdk/client-cloudformation';
import { ECS, LaunchType } from '@aws-sdk/client-ecs';
import { ClusterCleanupEventEmitter, ClusterCleanupConfig, DeleteOptions } from '.';
export declare class ClusterCleanup {
    private ecs;
    private cloudFormation;
    private events;
    private launchTypes;
    private TEN_MINUTES_IN_MS;
    private THIRTY_SECONDS_IN_MS;
    constructor(config?: ClusterCleanupConfig, ecs?: ECS, cloudFormation?: CloudFormation, events?: ClusterCleanupEventEmitter, launchTypes?: LaunchType[]);
    get eventEmitter(): ClusterCleanupEventEmitter;
    deleteClusterAndResources(clusterName: string, stackName?: string, options?: DeleteOptions): Promise<string[]>;
    private deleteHelper;
    private describeCluster;
    private doesClusterExist;
    private describeStack;
    private getAllServicesFor;
    private scaleServicesToZero;
    private getAllTasksFor;
    private stopTasks;
    private getAllInstancesFor;
    private deregisterContainerInstances;
    private deleteAllServices;
    private deleteStack;
    private describeStackEvents;
    private waitForStackDeletion;
    private setupCloudFormationPolling;
    private deleteCluster;
}
